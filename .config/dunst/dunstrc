[global]
font = Source Code Pro 9

# allow a small subset of html markup:
#   <b>bold</b>
#   <i>italic</i>
#   <s>strikethrough</s>
#   <u>underline</u>
#
# for a complete reference see
# <http://developer.gnome.org/pango/stable/pangomarkupformat.html>.
# if markup is not allowed, those tags will be stripped out of the
# message.
markup = yes
plain_text = no

# the format of the message.  possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %i  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
# markup is allowed
format = "<b>%s</b>\n%b"

# sort messages by urgency.
sort = no

# show how many messages are currently hidden (because of geometry).
indicate_hidden = yes

# alignment of message text.
# possible values are "left", "center" and "right".
alignment = center

# the frequency with wich text that is longer than the notification
# window allows bounces back and forth.
# this option conflicts with "word_wrap".
# set to 0 to disable.
bounce_freq = 0

# show age of message if message is older than show_age_threshold
# seconds.
# set to -1 to disable.
show_age_threshold = -1

# split notifications into multiple lines if they don't fit into
# geometry.
word_wrap = yes

# ignore newlines '\n' in notifications.
ignore_newline = no

# hide duplicate's count and stack them
stack_duplicates = yes
hide_duplicates_count = yes


# the geometry of the window:
#   [{width}]x{height}[+/-{x}+/-{y}]
# the geometry of the message window.
# the height is measured in number of notifications everything else
# in pixels.  if the width is omitted but the height is given
# ("-geometry x2"), the message window expands over the whole screen
# (dmenu-like).  if width is 0, the window expands to the longest
# message displayed.  a positive x is measured from the left, a
# negative from the right side of the screen.  y is measured from
# the top and down respectevly.
# the width can be negative.  in this case the actual width is the
# screen width minus the width defined in within the geometry option.
#geometry = "250x50-40+40"
geometry = "300x50-15+49"

# shrink window if it's smaller than the width.  will be ignored if
# width is 0.
shrink = no

# the transparency of the window.  range: [0; 100].
# this option will only work if a compositing windowmanager is
# present (e.g. xcompmgr, compiz, etc.).
transparency = 5

# don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# set to 0 to disable.
idle_threshold = 0

# which monitor should the notifications be displayed on.
monitor = 0

# display notification on focused monitor.  possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a windowmanager that exports the
# _net_active_window property.
# this should be the case for almost all modern windowmanagers.
#
# if this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = none

# should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# maximum amount of notifications kept in history
history_length = 15

# display indicators for urls (u) and actions (a).
show_indicators = no

# the height of a single line.  if the height is smaller than the
# font height, it will get raised to the font height.
# this adds empty space above and under the text.
line_height = 3

# draw a line of "separatpr_height" pixel height between two
# notifications.
# set to 0 to disable.
separator_height = 2

# padding between text and separator.
padding = 6

# horizontal padding.
horizontal_padding = 6

# define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a x color.
separator_color = frame

# print a notification on startup.
# this is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = false

# dmenu path.
dmenu = /usr/bin/dmenu -p dunst:

# browser for opening urls in context menu.
browser = /usr/bin/firefox -new-tab

# align icons left/right/off
icon_position = left
max_icon_size = 80

# paths to default icons.
icon_path = /usr/share/icons/paper/16x16/mimetypes/:/usr/share/icons/paper/48x48/status/:/usr/share/icons/paper/16x16/devices/:/usr/share/icons/paper/48x48/notifications/:/usr/share/icons/paper/48x48/emblems/

frame_width = 3
frame_color = "#8ec07c"

[shortcuts]

# shortcuts are specified as [modifier+][modifier+]...key
# available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
# "mod3" and "mod4" (windows-key).
# xev might be helpful to find names for keys.

# close notification.
close = ctrl+space

# close all notifications.
close_all = ctrl+shift+space

# redisplay last message(s).
# on the us keyboard layout "grave" is normally above tab and left
# of "1".
history = ctrl+grave

# context menu.
context = ctrl+shift+period

[urgency_low]
# important: colors have to be defined in quotation marks.
# otherwise the "#" and following would be interpreted as a comment.
frame_color = "#3b7c87"
foreground = "#3b7c87"
background = "#191311"
#background = "#2b313c"
timeout = 4

[urgency_normal]
frame_color = "#5b8234"
foreground = "#5b8234"
background = "#191311"
#background = "#2b313c"
timeout = 6

[urgency_critical]
frame_color = "#b7472a"
foreground = "#b7472a"
background = "#191311"
#background = "#2b313c"
timeout = 8


# every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# shell-like globbing will get expanded.
#
# scripting
# you can specify a script that gets run when the rule matches by
# setting the "script" option.
# the script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "low", "normal" or "critical".
#
# note: if you don't want a notification to be displayed, set the format
# to "".
# note: it might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # this notification will not be displayed
#    summary = "foobar"
#    format = ""

#[signed_on]
#    appname = pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = pidgin
#    summary = *twitter.com*
#    urgency = normal
#
# vim: ft=cfg
